---
title: "Vista Teleportation Analysis: Spatial Cognition in Virtual Environments"
author: "Your Name"
date: "`r Sys.Date()`"
format: html
---

```{r}
library(tidyverse)
library(lme4)
library(report)
library(ggeffects)
knitr::opts_chunk$set(echo = FALSE)

here::i_am("reports/analysis.qmd")
source(here::here("functions", "visualisation.R"))

df_pointing <- read.csv(here::here("temp", "processed", "pointing20250221.csv"))
df_distance <- read.csv(here::here("temp", "processed", "distance20250221.csv"))
df_timing <- read.csv(here::here("temp", "processed", "timing20250221.csv"))

df_trials <- read.csv(here::here("temp", "processed", "trial_data.csv"))
df_data <- read.csv(here::here("temp", "processed", "combined_data.csv"))

glimpse(df_trials)

df_trials <- df_trials %>%
  mutate(LevelName = str_c(str_remove(LevelName, "Vista|Nonvista"), "_", LevelSize),
         is_training = target == "OriginDoor",
         run = ifelse(grepl("run", participant), "Run2", "Run1"))

df_data <- df_data %>%
  mutate(run = ifelse(grepl("run", participant), "Run2", "Run1"))
df_trials_model <- df_trials %>%
  filter(!is_training)
```

## Descriptives

How long it took to complete the experiment in various conditions, especially comparing the same size vista vs non-vista levels and its interaction with movement mode

## Visualisations

## Validation of the pointing data

Validation based on the origin door 
```{r}
df_trials %>%
  select(participant, target, is_training, target_pointed_distance_difference,
         pointed_angle_difference) %>%
  pivot_longer(cols = target_pointed_distance_difference:pointed_angle_difference,
               names_to = "metric", values_to = "value") %>%
  ggplot(aes(x = value, fill = metric)) +
  geom_histogram() +
  facet_wrap(~metric+is_training, scales = "free") +
  theme_minimal(base_size = 16) +
  labs(title = "Validation based on the origin door") +
  theme(legend.position = "none")
```

Testing if the different variation of the verbal instructyion made any difference

```{r validation of the RUN on the origin door}
df_trials %>%
  filter(is_training) %>%
  ggplot(aes(x = run, y = target_pointed_distance_difference, fill = run)) +
  geom_boxplot() +
  theme_minimal(base_size = 16) +
  labs(title = "Effect of the run (verbal instruction) on pointing distance error to the origin door",
       x = "Run",
       y = "Pointing Distance Difference")
```

## Movement behaviors in different movement modes and vista non vista spaces

## Pointing distance error 

Overall analysis - do they overrshoot, undershoot?
```{r}
ggplot(df_trials_model, aes(x = target_pointed_distance_difference)) +
  geom_histogram() +
  theme_minimal(base_size = 16) +
  labs(title = "Pointing distance error",
       y = "Count",
       x = "Pointing Distance Difference")
```

```{r}
# Start with a simpler model to avoid singularity
lmer_pointed_distance <- lmer(target_pointed_distance_difference ~ Movement + LevelSize + Vista + LevelSize:Movement + Vista:Movement + Vista:LevelSize + (1|participant), data = df_trials_model)

# Check for singularity
summary(lmer_pointed_distance)
report_table(lmer_pointed_distance)
predict_response(lmer_pointed_distance, margins="empirical")
```

## Pointing angle error

```{r}
df_trials_model %>%
  ggplot(aes(x = log(abs(pointed_angle_difference)))) +
  geom_histogram() +
  theme_minimal() +
  labs(title = "Angle error",
       y = "Count",
       x = "Angle Error")
```

```{r}
lmer_pointed_angle <- glmer(abs(pointed_angle_difference) ~ Movement + LevelSize + Vista + Movement:LevelSize + Movement:Vista + (1|participant), data = df_trials_model, family = gaussian(link = "log"))

VarCorr(lmer_pointed_angle)
summary(lmer_pointed_angle)
report_table(lmer_pointed_angle)
```
```{r}
ggpredict(lmer_pointed_distance, terms = "Vista") %>%
  plot() +
  theme_minimal() +
  labs(title = "Effect of Vista on Pointing Distance Error",
       y = "Pointing Distance Difference",
       x = "Vista")
```

## Smaller analyses

### Pointing duration to see when people donsidered the distance the most

## Navigated duration and distance

```{r}
ggplot(df_data) +
  geom_histogram(aes(x = distance_items), bins = 30) +
  theme_minimal() +
  labs(title = "Distribution of Navigated Duration",
       x = "Navigated Duration",
       y = "Count")

ggplot(df_data, aes(Movement.x, distance_items)) +
  geom_boxplot() +
  facet_wrap(~Vista.x)

glmer((distance_items + distance_return)~ Movement.x + Vista.x + LevelSize + Movement.x:Vista.x + Movement.x:LevelSize + (1|participant), data = df_data, family = gaussian(link = "log")) %>%
summary()  
```


```{r}
ggplot(df_data, aes(Movement.x, distance_items)) +
  geom_boxplot()

ggplot(df_data, aes(Movement.x, duration_searching)) +
  geom_boxplot()


ggplot(df_data, aes(log(duration_searching))) +
  geom_histogram(bins = 30) +
  theme_minimal() +
  labs(title = "Distribution of Search Duration (log-transformed)",
       x = "Log(Search Duration)",
       y = "Count")

glmer(duration_searching ~ Movement.x + Vista.x + LevelSize + (1|participant), data = df_data, family = gaussian(link = "log")) %>%
summary()


glmer((duration_return + duration_searching)~ Movement.x + Vista.x + LevelSize + Movement.x:Vista.x + Movement.x:LevelSize + (1|participant), data = df_data, family = gaussian(link = "log")) %>%
summary()


glmer((duration_return + duration_searching)~ Movement.x + Vista.x + LevelSize + Movement.x:Vista.x + Movement.x:LevelSize + (1|participant), data = df_data, family = gaussian(link = "log")) %>%
summary()

```


```{r}
lmer()
View(df_data)
```